// <auto-generated />
using CRUSDL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRUSDL.Migrations
{
    [DbContext(typeof(ClothesRUSdemoContext))]
    [Migration("20211116212452_FirstCommit")]
    partial class FirstCommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CRUSModels.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Customer_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("CRUSModels.LineItem", b =>
                {
                    b.Property<int>("LineItemId")
                        .HasColumnType("int")
                        .HasColumnName("LineItem_ID");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.Property<int>("_quantity")
                        .HasColumnType("int");

                    b.HasKey("LineItemId");

                    b.ToTable("LineItem");
                });

            modelBuilder.Entity("CRUSModels.OrderPlacement", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_ID");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("Price");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.Property<int>("StoreFrontId")
                        .HasColumnType("int")
                        .HasColumnName("StoreFront_ID");

                    b.HasKey("OrderId")
                        .HasName("PK__OrderPla__464665E1B7D4693B");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreFrontId");

                    b.ToTable("OrderPlacement");
                });

            modelBuilder.Entity("CRUSModels.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Product_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StoreFrontId")
                        .HasColumnType("int")
                        .HasColumnName("StoreFront_ID");

                    b.HasKey("ProductId");

                    b.HasIndex("StoreFrontId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("CRUSModels.StoreFront", b =>
                {
                    b.Property<int>("StoreFrontId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StoreFront_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("StoreFrontId");

                    b.ToTable("StoreFront");
                });

            modelBuilder.Entity("CRUSModels.TestTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("TestTables");
                });

            modelBuilder.Entity("CRUSModels.OrderPlacement", b =>
                {
                    b.HasOne("CRUSModels.Customer", "Customer")
                        .WithMany("orderPlacements")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__OrderPlac__Custo__10566F31")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CRUSModels.Product", "Product")
                        .WithMany("OrderPlacements")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__OrderPlac__Produ__0F624AF8")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRUSModels.StoreFront", "StoreFront")
                        .WithMany("OrderPlacement")
                        .HasForeignKey("StoreFrontId")
                        .HasConstraintName("FK__OrderPlac__Store__0E6E26BF")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("StoreFront");
                });

            modelBuilder.Entity("CRUSModels.Product", b =>
                {
                    b.HasOne("CRUSModels.StoreFront", "StoreFront")
                        .WithMany("Products")
                        .HasForeignKey("StoreFrontId")
                        .HasConstraintName("FK__Product__StoreFr__114A936A")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("StoreFront");
                });

            modelBuilder.Entity("CRUSModels.Customer", b =>
                {
                    b.Navigation("orderPlacements");
                });

            modelBuilder.Entity("CRUSModels.Product", b =>
                {
                    b.Navigation("OrderPlacements");
                });

            modelBuilder.Entity("CRUSModels.StoreFront", b =>
                {
                    b.Navigation("OrderPlacement");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
